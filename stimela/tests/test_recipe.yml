cabs:
  simms:
    command: simms
    inputs:
      msname:
        writeable: True
        dtype: str
        required: true
      telescope:
        dtype: str
      dtime:
        dtype: int
      synthesis:
        dtype: float
        
  cubical:
    command: gocubical
    inputs:
      ms:
        dtype: str
        required: true

  wsclean:
    command: wsclean
    inputs:
      msname:
        writeable: True
        dtype: str
        required: true
      name:
        dtype: str
        required: true
      size:
        dtype: str
        required: true
      scale:
        dtype: str
        required: true

  aimfast:
    command: aimfast
    inputs:
      image:
        dtype: str
        required: true

recipe:
  name: "Oleg's bullshit recipe"
  info: 'top level recipe definition'
  vars:
      ms: demo.ms
  dirs:
    input: input
    output: output
  inputs:
    msname:
      dtype: str
      required: true
      maps_to: [makems.msname, selfcal.ms]
    telescope:
      maps_to: [makems.tel]
      required: true
  steps: 
      makems:
          cab: simms
          params:
              synthesis: 0.128
      selfcal:
          recipe:
              name: "bullshit selfcal"
              info: "this is a generic selfcal loop"
              vars:
                  scale: 30asec
                  size: 256 
              _for:
                  selfcal_loop: 1,2,3     # repeat three times
              steps:
                  calibrate: 
                      cab: cubical
                      _skip: "recipe.vars.selfcal_loop < 2"    # skip on first iteration, go straight to image
                  image:
                      cab: wsclean
                      params:
                          scale: "{recipe.vars.scale}"
                  evaluate:
                      cab: aimfast
                      _break_on: "step.outputs.dr_achieved"    # break out of recipe based on some output value
              # the below formally specifies the inputs and outputs of the selfcal recipe
              inputs:
                  ms: 
                      dtype: ms
                      writeable: true
                      maps_to: [calibrate.ms, image.msname] 
                  image:
                      maps_to: [image.name, evaluate.image]
                      required: true
